{
    "kind": "blogger#postList",
    "nextPageToken": "CgkIChjgzZzKiDIQl-CB3576krglGAA",
    "items": [
        {
            "kind": "blogger#post",
            "id": "5255880582685532175",
            "blog": {
                "id": "2697739541772529687"
            },
            "published": "2024-08-17T04:29:00-07:00",
            "updated": "2024-08-17T07:30:12-07:00",
            "url": "http://dooques.blogspot.com/2024/08/adding-customization-options-and.html",
            "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/5255880582685532175",
            "title": "Adding Customization Options and Exporting the Watermarking App",
            "content": "<h1 style=\"text-align: left;\"><span style=\"color: #6aa84f;\">&nbsp;Welcome!</span></h1><p>Hi there, this will be my final post regarding my Watermarking project and today I'm going to be adding some customization options to my application and exporting it with auto-py-to-exe. This has been the most rewarding project I\u2019ve done so far, most likely because the project feels more tangible with the GUI that opens and can be tested as you go, giving immediate feedback on whether something works or not.&nbsp;</p><p>Before I could add any customization options I needed to allow the user to actively update the images watermark by hitting a confirm button. I have done this by separating parts of the functions to behave differently. Before you confirm, the button calls check_type() which checks to see if you have selected the single or repeating watermark radio button. If you have already selected a file these functions will open the file at that path and process the image. If no file is selected a dialog window will open letting you know that no valid file has been selected. The dialog will also show if you have not entered a valid water mark either.</p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh9u4lqWee4qQQCOjIyCkHwI4i9UlNSmpzBQVH2-IIwRD0ngHU0Ap8bcSMZjGdsWVWyqC1wEEtV1lku1VL1OQmoV8cHm6j0Q10Yy6wLJfLn8PK_-UegBeYhG04zKR6I92UVhOM9cbOjKQhJ9QJK7-X3myNJ8HdBwqfrBE3eT6nwZLKnks5XtmxP854WuWGG/s1411/Screenshot%202024-08-17%20120350.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"461\" data-original-width=\"1411\" height=\"210\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh9u4lqWee4qQQCOjIyCkHwI4i9UlNSmpzBQVH2-IIwRD0ngHU0Ap8bcSMZjGdsWVWyqC1wEEtV1lku1VL1OQmoV8cHm6j0Q10Yy6wLJfLn8PK_-UegBeYhG04zKR6I92UVhOM9cbOjKQhJ9QJK7-X3myNJ8HdBwqfrBE3eT6nwZLKnks5XtmxP854WuWGG/w640-h210/Screenshot%202024-08-17%20120350.png\" width=\"640\" /></a></div><p>I\u2019ve also adjusted the get_file_btn command as I wanted to have a blank canvas that opens before you select a photo to keep the look of the application more consistent This proved difficult initially as creating the canvas to begin with and then adding the picture after seemed to stop the resize image function from working and displayed the photo full size. My solution was to create a second canvas called canvas_temp that only shows when there\u2019s no image selected.&nbsp;</p><p></p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgsJwh3Ne0Drj3sboAjF7L4b8HYpuDtMjweRAm_Rd126dSmPs8mUni8tvqNZIt9S29acup5lkwthISLm7766l-xWWdG1yJPoJqY7GBpWVXpzBMq1d_YoXt00KWWt74pMbpMD-l5pn3nqOPz2MbPBSImbkJr5U0W2Gf6R5HhyphenhyphenBx3wTnB3PorCQJDfAvUwFIP/s693/Screenshot%202024-08-17%20115238.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"555\" data-original-width=\"693\" height=\"320\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgsJwh3Ne0Drj3sboAjF7L4b8HYpuDtMjweRAm_Rd126dSmPs8mUni8tvqNZIt9S29acup5lkwthISLm7766l-xWWdG1yJPoJqY7GBpWVXpzBMq1d_YoXt00KWWt74pMbpMD-l5pn3nqOPz2MbPBSImbkJr5U0W2Gf6R5HhyphenhyphenBx3wTnB3PorCQJDfAvUwFIP/w400-h320/Screenshot%202024-08-17%20115238.png\" width=\"400\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div>Now when the user clicks the get_file_btn it calls the open_file command, this will open a askopenfile dialog to allow the user to save the file path of the image to self.path, if the user changes their mind and does not select a path, this function will return None, before this failsafe, the function was changing self.path to None and not allowing the user to keep editing their watermark as it was showing the warning that no image was selected. If a valid image is selected, the function calls process_file() where an Image object is created and assigned to self.image. Next the temp_canvas is destroyed and get_image() is called.&nbsp;<p></p><p></p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiDKJfq9_qsEXLo3PpEoKBC-5kgwvzix1o7F6WVaBfamKBOtXOMATSX3uabt4FcRUs3dhZ6o1LzE4784hkS2g86wb0sR037osP2et9cAKJZx7ZJnqJl9tpFlXsfP9mF43QfKK0CBQRin9ZU82-67ezGifmN-r2QYJJ-cLsDv5uzf1bBChC-h1C18m0qijHN/s1503/Screenshot%202024-08-17%20115246.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"432\" data-original-width=\"1503\" height=\"184\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiDKJfq9_qsEXLo3PpEoKBC-5kgwvzix1o7F6WVaBfamKBOtXOMATSX3uabt4FcRUs3dhZ6o1LzE4784hkS2g86wb0sR037osP2et9cAKJZx7ZJnqJl9tpFlXsfP9mF43QfKK0CBQRin9ZU82-67ezGifmN-r2QYJJ-cLsDv5uzf1bBChC-h1C18m0qijHN/w640-h184/Screenshot%202024-08-17%20115246.png\" width=\"640\" /></a></div><p></p><p>In get_image(), rather than just updating the current self.image file, which was creating multiple layers of transparent text over the same image each time you click confirm. This now opens the image from the self.path variable on the canvas every time you confirm the watermark or open a file.</p><h4 style=\"text-align: left;\"><span style=\"color: #6aa84f;\">Customisation</span></h4><p>I\u2019ve created multiple customisation settings for the watermark that control different variables within the create_watermark command. The first two I created were the most difficult, as creating the widgets for the font commands was a steep learning curve. I initially created the Scale for the font size, which was fairly straight forward. The scale\u2019s command argument is attached to the set_font_size()&nbsp; function that changes the self.font_size constant in the watermark settings. As the scale slider goes up or down the function, it also actively changes the value in the self.font_size_label displaying it before you hit the confirm button. The other scale widgets that control rotation and transparency were pretty much the same as the font_size scale so they were fairly straight forward.&nbsp;</p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjqSeweUWWUzrAG50rmg7SOtffBqzRzepxrV1K6tuL6yPVG01VEmmRWY_mRk-mGNAqxJknv-iDlK4oBPERkhDWTdZccB9yzaLVHAzFpNnvnQtf37YKHt4_D1dR6YCPJZj_1OGfvJK5xQ4p0UTVl0KDf4mba9EYEwyEjQcfh8qKnS4-dnVDpv22UbCkIZSAr/s1365/Screenshot%202024-08-17%20115705.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"379\" data-original-width=\"1365\" height=\"178\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjqSeweUWWUzrAG50rmg7SOtffBqzRzepxrV1K6tuL6yPVG01VEmmRWY_mRk-mGNAqxJknv-iDlK4oBPERkhDWTdZccB9yzaLVHAzFpNnvnQtf37YKHt4_D1dR6YCPJZj_1OGfvJK5xQ4p0UTVl0KDf4mba9EYEwyEjQcfh8qKnS4-dnVDpv22UbCkIZSAr/w640-h178/Screenshot%202024-08-17%20115705.png\" width=\"640\" /></a></div><p>Creating the font_menu took me a much longer time to create as I was initially trying to use a MenuButton and a Menu object to create the list of fonts to choose from. I had tried to create the list of variables using a for loop that iterates through the list of fonts but couldn\u2019t get the command function to return a StringVar from the list choice. I was looking for another youtube tutorial from Atlas, then another tutorial but couldn\u2019t find an answer, realising this type of Menu works more as a submenu system, just opening further menus until you get to the final one with the commands. It wasn\u2019t until I had found a random stackoverflow answer while googling how to get a menu to populate with a list that I discovered that an OptionMenu was what I needed.&nbsp;</p><p></p><p style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjKP1bFuBodHrwMnLlr31gfbvwS080l13sdoMtdThouTkckiCtjk-EGwzse6j5IzNMuYWbiLA3GPmJ8TAYMKZ5Zi2hlxWSykNdssQeaYWMOvFD9VfsxewgapHIkdJOwdkBHatFapXDMAk5Yyd_k0N3IkysWXKAvwLtHJWPoRzN97nHDE-9GqA-k3ZrxU5tw/s965/Screenshot%202024-08-10%20185022.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"783\" data-original-width=\"965\" height=\"520\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjKP1bFuBodHrwMnLlr31gfbvwS080l13sdoMtdThouTkckiCtjk-EGwzse6j5IzNMuYWbiLA3GPmJ8TAYMKZ5Zi2hlxWSykNdssQeaYWMOvFD9VfsxewgapHIkdJOwdkBHatFapXDMAk5Yyd_k0N3IkysWXKAvwLtHJWPoRzN97nHDE-9GqA-k3ZrxU5tw/w640-h520/Screenshot%202024-08-10%20185022.png\" width=\"640\" /></a></p>I changed my list of fonts to a dictionary as the .ttf font files saved on my computer were all named very differently to each other, so it wasn\u2019t possible to just use .lower() to change the font when opening the file. Once the user selects the font, the value of the font in the dictionary is assigned to self.selected_font by calling the set_font() command. Upon hitting confirm watermark, the value is concatenated with the .ttf extension and the font is selected from the assets folder within the project directory.<p></p><p>For the final customisation option I\u2019ve separated create_watermark into two functions. One of them creates a repeating watermark I\u2019ve been using throughout the project so far. The other one creates a single line of text in the bottom right corner that displays the text you\u2019ve entered. This one cannot be rotated as I\u2019ve created the text in a Draw object that matches the size of the original image and rotating that will not allow it to be combined in the alpha composite. The single watermark is also designed as more of an advertisement for your brand or name so rotating the text wouldn\u2019t be useful in this context.</p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh8Qh8CBxiSURMp3yVO3XFZPhqBhf-szdgo3NnoVokx6oV7eEbLT9s2DHtwecXCaEiMj_z53QkOPr6MOCZ6G1ZrK-7I6FXQyK5nmpnqzd7p7AMDJriWaS7Bbd47es76b-Nroi733PIsBLOiUysM-SZU_1VkCbxnx8-_WF6wjvDP0YWMtjZap6V9qk_IF59u/s1258/Screenshot%202024-08-16%20073312.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1258\" data-original-width=\"1104\" height=\"640\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh8Qh8CBxiSURMp3yVO3XFZPhqBhf-szdgo3NnoVokx6oV7eEbLT9s2DHtwecXCaEiMj_z53QkOPr6MOCZ6G1ZrK-7I6FXQyK5nmpnqzd7p7AMDJriWaS7Bbd47es76b-Nroi733PIsBLOiUysM-SZU_1VkCbxnx8-_WF6wjvDP0YWMtjZap6V9qk_IF59u/w562-h640/Screenshot%202024-08-16%20073312.png\" width=\"562\" /></a></div><p>Once the user is happy with their watermark they can now save the image. When you click the Save to File button it calls the save_to_file function and opens an \u2018asksaveasfilename\u2019 dialog which allows the user to navigate to their desired directory. The dialog uses the types variable to display \u2018.jpg\u2019 as the file type you are saving or select \u2018All Files\u2019 to see other file types within the directory. The only extension the program can currently save as is \u2018.jpg\u2019 and the program will show a \u2018Saving Error\u2019 if the user tries to use an extension that\u2019s not currently supported.</p><h4 style=\"text-align: left;\"><span style=\"color: #6aa84f;\">Exporting the application to .exe</span></h4><p>Once all the features of the application were complete I used \u2018\u2018auto-py-to-exe\u2019 to export the program as a \u2018.exe\u2019 file so I can get some friends and family to test the program and see if they can break it. Getting someone who\u2019s had no experience with the program is always an excellent stress test to make sure you\u2019ve not overlooked any simple things after being invested in making it a certain way during the development phase. One of my friend\u2019s who tested it told me they were having issues using the fonts I had in the menu. The fonts that weren\u2019t working were the ones I\u2019d downloaded from Google Fonts like helvetica. I\u2019ve removed those fonts from the program and just added in some other default windows fonts as they work more reliably with the program right now.</p><p>The application appears to be stable and all the functions are working as intended. If you\u2019ve made it to the end of this fairly long post thanks for reading. Please leave a comment or reach out to me on linked in if you have any feedback on my progress so far. I hope you have a great day!</p><h4 style=\"text-align: left;\"><span style=\"color: #cc0000;\">References</span></h4><div><span style=\"color: #cc0000;\"><a href=\"https://github.com/Dooques/watermarking_app\">Github Link</a>&nbsp;</span></div><div style=\"text-align: left;\"><a href=\"https://anzeljg.github.io/rin2/book2/2405/docs/tkinter/index.html\">Tkinter comprehensive documentation</a></div><div><br /></div>",
            "author": {
                "id": "06093669945308582562",
                "displayName": "Dooques",
                "url": "https://www.blogger.com/profile/06093669945308582562",
                "image": {
                    "url": "//www.blogger.com/img/blogger_logo_round_35.png"
                }
            },
            "replies": {
                "totalItems": "0",
                "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/5255880582685532175/comments"
            },
            "etag": "\"dGltZXN0YW1wOiAxNzIzOTA1MDEyMDg3Cm9mZnNldDogLTI1MjAwMDAwCg\""
        },
        {
            "kind": "blogger#post",
            "id": "8151536648850833494",
            "blog": {
                "id": "2697739541772529687"
            },
            "published": "2024-08-08T11:53:00-07:00",
            "updated": "2024-08-08T11:55:35-07:00",
            "url": "http://dooques.blogspot.com/2024/08/tkinter-image-manipulation-and-canvases.html",
            "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/8151536648850833494",
            "title": "Tkinter Image Manipulation and Canvases",
            "content": "<h1 style=\"text-align: left;\"><span style=\"color: #6aa84f;\">&nbsp;Welcome!</span></h1><p style=\"text-align: left;\">Hey there, this is going to be part 3 in my creation of the watermarking app. So far I've successfully watermarked an image using PIL and created a GUI using tkinter to allow a user to select the image they want to watermark. In this part I was planning to start adding some customisation options along with the image, but the image actually took a lot more work than I was expecting. So instead I'm going to be going through the logic of getting the image to appear within the window of the application. I was also having trouble getting the information I needed regarding canvases and images from the documentation, so I ended up finding a Youtube tutorial from an account named Atlas that was incredibly helpful.</p><p></p><p style=\"text-align: left;\">My first hurdle was getting the images to show up when calling it through the get_image function. I ended up turning the entire tkinter section into a class so I could more easily call functions that would update the base code as it goes. Tkinter needs variables to exist and be updated within the main scope of the project to run successfully, otherwise objects like images will not display correctly. I have widgets that will be created later set as 'None' in the init function so they can be updated to contain the objects at the appropriate time.</p><p style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiv44Rv-F2rIicMHd0ftXXE7QueGET0GN1npZZ89ctRwBSoRH2s-eOv9iKJDNriTIrxN0PCFvxoDMFtrJoUHbpuGCyJVSWUjlMbL_bngPLhV1WMc1Dx8fCI2AfecSiLQBVtIZpvAMo4S78IFLz0BareMJ5IlpfHpdN9RFywukUIuGBpdgOMdmqLD6JyWT29/s1440/Screenshot%202024-08-08%20080312.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1270\" data-original-width=\"1440\" height=\"565\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiv44Rv-F2rIicMHd0ftXXE7QueGET0GN1npZZ89ctRwBSoRH2s-eOv9iKJDNriTIrxN0PCFvxoDMFtrJoUHbpuGCyJVSWUjlMbL_bngPLhV1WMc1Dx8fCI2AfecSiLQBVtIZpvAMo4S78IFLz0BareMJ5IlpfHpdN9RFywukUIuGBpdgOMdmqLD6JyWT29/w640-h565/Screenshot%202024-08-08%20080312.png\" width=\"640\" /></a></p><p style=\"text-align: left;\">Originally I was going to call functions in a separate python file containing the class, but that would make it very difficult to change specific variables contained within the tkinter window. If at the end there are some functions that could be running outside of the main scope I will add them into a separate python file called functions.py.&nbsp;</p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi0sOLL7-HDULKrNn_AHD3HwrWkc3boa4cWeC_Xwm-HswYDg3raFAgq8L0uRDKQXG-GX7epEXaw4U57xM96i-_LnKWKNJlU8XIwqgfAIuyUZNBMTfJH9yd_6VVto2v2Y6nO7jV8xBbQ5f17U7mKEnFMt7sfEu925nOLyuOdg9hTHumlmozyTx9v6EFykz5V/s834/Screenshot%202024-08-08%20080659.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"694\" data-original-width=\"834\" height=\"533\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi0sOLL7-HDULKrNn_AHD3HwrWkc3boa4cWeC_Xwm-HswYDg3raFAgq8L0uRDKQXG-GX7epEXaw4U57xM96i-_LnKWKNJlU8XIwqgfAIuyUZNBMTfJH9yd_6VVto2v2Y6nO7jV8xBbQ5f17U7mKEnFMt7sfEu925nOLyuOdg9hTHumlmozyTx9v6EFykz5V/w640-h533/Screenshot%202024-08-08%20080659.png\" width=\"640\" /></a></div><p style=\"text-align: left;\">Before I found the tutorial I was planning to try and divide the image size by the relative size of the window through a series of for loops, which looking back now I can see was probably not going to work or be unnecessarily complicated at the end.</p><p style=\"text-align: left;\">Using the tutorial's help I created the function above. It takes the size ratios of both the window and the image and if the window ratio is different to the image ratio it executes an equation that works out how big the window needs to be so that it can fit inside the window without being stretched or cut off. The equation either takes the height/width of the window and divides/mutlitplies that by the image ratio to make sure the image fits correctly. This will not only be helpful if someone is using the program windowed and resizing it but also if they have a monitor that's a different size or aspect ratio.</p><p style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhHAdzeZ2gCHqVebCOh_lcqSuAWPVnggw6A1CgGC90sYP2XG96L_vXAI1yft7ln2WpLAIr-7vjCrVQo77Ppx6_T1Jn8N4guKMFmce9ap3XpJ2S8cpDcjnVIPtWhqvTwBqGL8qDE0W3Z8AMAaqnOl5_ullGVLI1PwItMLk5-LRtlmsKrDOiiBFP7gI0_zBZ_/s1622/Screenshot%202024-08-08%20192343.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1200\" data-original-width=\"1622\" height=\"474\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhHAdzeZ2gCHqVebCOh_lcqSuAWPVnggw6A1CgGC90sYP2XG96L_vXAI1yft7ln2WpLAIr-7vjCrVQo77Ppx6_T1Jn8N4guKMFmce9ap3XpJ2S8cpDcjnVIPtWhqvTwBqGL8qDE0W3Z8AMAaqnOl5_ullGVLI1PwItMLk5-LRtlmsKrDOiiBFP7gI0_zBZ_/w640-h474/Screenshot%202024-08-08%20192343.png\" width=\"640\" /></a></p><p></p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjL7XyuMqMIWa2fFl_cAxD7zTx-6wZgvjGm_ICXCMHSxRdiuqC84bDva-JNGlv2ihz175XT8KkbEAFv_lh41QEheiM7uXgIGYvwOKXWZJ9A3uXN-rC1_vdUioYg9MaaddnmSAxrbMUBbMaZvt6c9Ou8VdfndbhBmV44VDTaG-ZbbGyoeay-k2MehspCv-zF/s908/Screenshot%202024-08-08%20195424.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"247\" data-original-width=\"908\" height=\"174\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjL7XyuMqMIWa2fFl_cAxD7zTx-6wZgvjGm_ICXCMHSxRdiuqC84bDva-JNGlv2ihz175XT8KkbEAFv_lh41QEheiM7uXgIGYvwOKXWZJ9A3uXN-rC1_vdUioYg9MaaddnmSAxrbMUBbMaZvt6c9Ou8VdfndbhBmV44VDTaG-ZbbGyoeay-k2MehspCv-zF/w640-h174/Screenshot%202024-08-08%20195424.png\" width=\"640\" /></a></div><p style=\"text-align: left;\">Finally I have added the create_text() function to update the self.image variable in get_image so it prints the watermark on top of the image as an example for anyone who is using the application. This was expanded from the previous function that just opened the file dialog, it now creates the entire canvas and image within the window. Another tidbit of information I learned from the tutorial was using the 'sticky' argument to anchor the image to a specific corner of the canvas. In this function you will see that the image is anchored to the 'north west' or top right corner instead of the center as it normally is.</p><p style=\"text-align: left;\">Hopefully next time I will be able to add some customization options, it took much longer than I expected to create the logic for the image. Thanks again for reading, see you next time!</p><p style=\"text-align: left;\"><br /></p><p style=\"text-align: left;\">References</p><div style=\"text-align: left;\"><a href=\"https://www.youtube.com/watch?v=VnwDPa9biwc\">ImageTk Tutorial</a></div><div style=\"text-align: left;\"><a href=\"https://www.pythonguis.com/tutorials/create-ui-with-tkinter-grid-layout-manager/\">Grid Args</a><br /></div><br />",
            "author": {
                "id": "06093669945308582562",
                "displayName": "Dooques",
                "url": "https://www.blogger.com/profile/06093669945308582562",
                "image": {
                    "url": "//www.blogger.com/img/blogger_logo_round_35.png"
                }
            },
            "replies": {
                "totalItems": "0",
                "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/8151536648850833494/comments"
            },
            "etag": "\"dGltZXN0YW1wOiAxNzIzMTQzMzM1MTkzCm9mZnNldDogLTI1MjAwMDAwCg\""
        },
        {
            "kind": "blogger#post",
            "id": "884517865383654373",
            "blog": {
                "id": "2697739541772529687"
            },
            "published": "2024-08-05T12:10:00-07:00",
            "updated": "2024-08-05T12:10:36-07:00",
            "url": "http://dooques.blogspot.com/2024/08/learning-from-documentation-tkinter.html",
            "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/884517865383654373",
            "title": "Learning from Documentation - Tkinter / Watermarking Project",
            "content": "<h1 style=\"text-align: left;\">&nbsp;<span style=\"color: #6aa84f;\">Welcome!</span></h1><p style=\"text-align: left;\">Today I'm going to be working on the 2nd part of my watermarking project, which involves creating a GUI that will allow the project to run as a desktop application. I have some experience with Tkinter, having used it to create a couple of guided projects through 100 Days of Code but it's been a good few months since I've really utilised it properly. Beginning this project now, I feel like some of that knowledge has completely gone out the window, but I imagine once I start getting into it and seeing familiar functions it will come back to me.</p><p style=\"text-align: left;\">My goal right now is to get better at understanding documentation as I still feel like I'm trying to decipher kanji when I try to discern useful information from it.&nbsp;</p><p style=\"text-align: left;\"></p><p style=\"margin-left: 1em; margin-right: 1em; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgei-D30C6LzDtd8frSObd0qj3T2eiAM9Y9HHtrP2hyMKrYeC552vRrahauDpMx4g-hKWVRKB1USJp1bp32epAnCjwLu0YLpuIIDVOd6FvzYDR1kZAYJLTzQ_SHFfRzWUlmapXcVegi1AWlJhgT6vxVrp42mN290UQasSon4R1wvZvKnAveMQkZxk5RlmoM/s1902/Screenshot%202024-08-05%20192925.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1108\" data-original-width=\"1902\" height=\"233\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgei-D30C6LzDtd8frSObd0qj3T2eiAM9Y9HHtrP2hyMKrYeC552vRrahauDpMx4g-hKWVRKB1USJp1bp32epAnCjwLu0YLpuIIDVOd6FvzYDR1kZAYJLTzQ_SHFfRzWUlmapXcVegi1AWlJhgT6vxVrp42mN290UQasSon4R1wvZvKnAveMQkZxk5RlmoM/w400-h233/Screenshot%202024-08-05%20192925.png\" width=\"400\" /></a></p>I've gone through most of the basic tkinter tutorial on the documentation and have learned a few basic things about the program. I've created a python file within the project called tkinter_testing.py which has a bunch of examples I can refer to in the future. I'm still not entirely sure how to layout the application, I'm going to go through my old tkinter projects from Angela Yu's course and see if I can bring out some inspiration.<p></p><p style=\"text-align: left;\">I've now used tkinter to create a small window using Tk() that will help a user perform the functions of watermarking the image. So far I have created 4 widgets within this window, one is a label that will instruct the user on how to use the application, a 'Get File' button and an entry, with a label to let the user know where to type out a watermark that they'd like to add to the photo.</p><p style=\"text-align: left;\"></p><p style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhsXMDvEVt2vg1vqVKAR_oMP_cfnIMRVfeSqZ5SKZ00ihf_hOAwbOZJ_6Czz4LmSrfXa54SV6cw0q6wPkMt_rY_r-vVS2vPnGZBk4qCXGRakLWNsChn0lJK8Zgm4Jp1Ey2sYFv4ioLMmwkSx5tx5n4mbeKTWimN-Kqb03jcJJFB2P1FDuPO2357GA8zPUVC/s1060/Screenshot%202024-08-05%20193902.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"563\" data-original-width=\"1060\" height=\"213\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhsXMDvEVt2vg1vqVKAR_oMP_cfnIMRVfeSqZ5SKZ00ihf_hOAwbOZJ_6Czz4LmSrfXa54SV6cw0q6wPkMt_rY_r-vVS2vPnGZBk4qCXGRakLWNsChn0lJK8Zgm4Jp1Ey2sYFv4ioLMmwkSx5tx5n4mbeKTWimN-Kqb03jcJJFB2P1FDuPO2357GA8zPUVC/w400-h213/Screenshot%202024-08-05%20193902.png\" width=\"400\" /></a></p>I've gone back through my old tkinter apps from early on in the course as a reminder for positioning the items within the window as the tkinter documentation only seemed to have limited information on certain functions. For example I don't see Canvas() anywhere in the documentation apart from one reference in a changelog from a specific update to the package. I haven't utilized the canvas yet but I am hoping to get it working as an active image that will update as you change the settings of the watermark.<p></p><p style=\"text-align: left;\"></p><p style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg201s8NxyQVDQA4nagCwyeEatdMsHubpEeF-hgeJuE8VZ7Pk_q_JD4FpyVCnFMDyzpgbGbyJHZbP0PencUaXmjNnlQPf9Dtmn-vT-yT93Jm_BWpgcpSlJIYMnuIDuI82SUoHF4bCTbXNh1_vNHuD-o4Lf8jCuSLw9i8rPnZVA7xCAh6fLHdVpGUfaX2Kfp/s820/Screenshot%202024-08-05%20193956.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"600\" data-original-width=\"820\" height=\"234\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg201s8NxyQVDQA4nagCwyeEatdMsHubpEeF-hgeJuE8VZ7Pk_q_JD4FpyVCnFMDyzpgbGbyJHZbP0PencUaXmjNnlQPf9Dtmn-vT-yT93Jm_BWpgcpSlJIYMnuIDuI82SUoHF4bCTbXNh1_vNHuD-o4Lf8jCuSLw9i8rPnZVA7xCAh6fLHdVpGUfaX2Kfp/s320/Screenshot%202024-08-05%20193956.png\" width=\"320\" /></a></p><p></p><p style=\"text-align: left;\">For the button and entry widgets I have created two functions to work alongside them. The 'Open File' button runs the create_text() function that will create the watermark as shown in my last post. Instead of directly grabbing the information from the assets folder as I was doing before, this time it first uses the open_file() function which uses filedialog.askopenfile() to use the user's local file explorer to select an image. You'll see below I left a link to TextIOWrappers as I was struggling to get the information I needed out of the object that the filedialog returned. After looking up that information it turned out all I needed was to use .name on the object to get the image path.</p><p style=\"text-align: left;\">After that, it uses get_watermark to retrieve the data from the entry widget. Before it's returned it checks to see if the string has a length of zero, as the StringVar() doesn't appear to return None. If that's the case, both get_watermark() and create_text() will return None, breaking the function and using messagebox.showinfo to let the user know they forgot to enter a watermark.<br /></p><p style=\"text-align: left;\">I feel like I've made some good progress so far and have a decent idea of where I want to go with the application. Next I'm going to focus on getting the image to appear in the window and adding some options to let the user customise the size and direction of the repeats. Connecting the widgets in tkinter to the variables within the pillow function should work pretty well.</p><p style=\"text-align: left;\">Thanks for reading my blog, I hope you have a great day!&nbsp;</p><p style=\"text-align: left;\"><br /></p><h4 style=\"text-align: left;\">References</h4><div style=\"text-align: left;\"><a href=\"https://docs.python.org/3/library/tkinter.html\">Tkinter Documentation</a></div><div style=\"text-align: left;\"><a href=\"https://www.pythonmorsels.com/TextIOWrapper/\">TextIOWrappers</a><br /></div><br />",
            "author": {
                "id": "06093669945308582562",
                "displayName": "Dooques",
                "url": "https://www.blogger.com/profile/06093669945308582562",
                "image": {
                    "url": "//www.blogger.com/img/blogger_logo_round_35.png"
                }
            },
            "replies": {
                "totalItems": "0",
                "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/884517865383654373/comments"
            },
            "etag": "\"dGltZXN0YW1wOiAxNzIyODg1MDM2MDU3Cm9mZnNldDogLTI1MjAwMDAwCg\""
        },
        {
            "kind": "blogger#post",
            "id": "5311347575091090387",
            "blog": {
                "id": "2697739541772529687"
            },
            "published": "2024-08-03T11:13:00-07:00",
            "updated": "2024-08-03T11:13:41-07:00",
            "url": "http://dooques.blogspot.com/2024/08/learning-to-use-pil-and-creating.html",
            "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/5311347575091090387",
            "title": "Learning To Use PIL And Creating A Watermark",
            "content": "<h1 style=\"text-align: left;\"><span style=\"color: #6aa84f;\">Welcome!</span></h1><p style=\"text-align: left;\">Hi there and welcome to my development blog. Today I'm going to be working on a desktop program using Tkinter and Pillow that will watermark photos for a user. I've got some experience with Tkinter and almost none with Pillow so this program is going to require some learning.&nbsp;</p><p style=\"text-align: left;\">It's going to be interesting if I can find a way to get the program to export to an .exe file for use on windows, and also a macOS compatible file. I don't have a mac so it will be very difficult to test and make sure it works on that os.&nbsp;</p><p style=\"text-align: left;\">First off I'm going to go through the pillow documentation as it's a package I've not really used before and I would like to learn more about it's function as I may have use for certain things further down the line. I was going to talk about how the pillow documentation was easy to read and not complex but after reading through the tutorial it completely lost me as it was using sys &amp; os to iterate over files in a directory. I've not had much experience with the os package outside of environment variables and no experience with sys, so this kinda threw me for a loop.&nbsp;</p><p style=\"text-align: left;\">I've started watching a youtube tutorial on the basic functions of pillow and now I know how to resize, crop and get information about an image, as well as messing with the rgb values of each band. I think I can go ahead and hopefully get through the documentation without too much more tutorial help.</p><p style=\"text-align: left;\"></p><p style=\"clear: both; text-align: center;\"></p><p style=\"text-align: left;\">After reading the documentation I've found ImageDraw and ImageFont are my best bet for creating the watermark. I've followed the documentation's tutorial and overlaid the words 'Hello World' on the test image. The image gets converted to RGBA which allows opacity, this means I can print a watermark that doesn't completely obscure the image.</p><div style=\"text-align: left;\"><br /></div><div style=\"margin-left: 1em; margin-right: 1em; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi7dtm7qdRb6JPO-oJJkqKh7kD4CyRbFh9IxmUQXskBAmnDE3B8cCixbNPgcy1sgAsc6vTcczYL03-XGqh7JcVD_gdgf50lwGvaSeyNHCMYJ9Wt21YGENpIfppNELFpMeu4Qht1S4_2G8NDBFwc9djHVgFvHycLbRGxaIYH2dKQ4QzbPQ8oHlJNVMXTcVn3/s1346/jazzy.jpg\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1346\" data-original-width=\"758\" height=\"320\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi7dtm7qdRb6JPO-oJJkqKh7kD4CyRbFh9IxmUQXskBAmnDE3B8cCixbNPgcy1sgAsc6vTcczYL03-XGqh7JcVD_gdgf50lwGvaSeyNHCMYJ9Wt21YGENpIfppNELFpMeu4Qht1S4_2G8NDBFwc9djHVgFvHycLbRGxaIYH2dKQ4QzbPQ8oHlJNVMXTcVn3/s320/jazzy.jpg\" width=\"180\" /></a></div><p style=\"text-align: left;\">I've been using this image of my dog sleeping as the demo for the watermark. I am using ImageDraw.Draw() with a variable containing a blank Image object twice the size of the original image. This gives me the basic template to create the text for the watermark, which can then be cropped to the size of the original image while having the text still continuously repeat over the image.</p><p style=\"text-align: left;\">Initially to create the text I had been trying to loop Draw.text() within two for loops that iterate through a list of x &amp; y coordinates. This unfortunately doesn't work as it appears Draw.text() works in place and breaks the loop as soon as it's finished, meaning it would either return one instance of the watermark or none at all. I then found the Draw.multiline_text() function which would allow me to create the repeating text as a string with multiple line breaks and overlay that on the image.&nbsp;</p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg5dpvMyqMQJc3lS6owUxqr7Y_uiaL1qvoFQFC6GeWHVzLIRTECe0zix5ZOOOUjqS6GfIb8oIT-Q_Gq8_oGiLkEPHtY5tSGApMo001cFxgNbXWLKr74uKVMCGxkJLss2XP1Hvk2okuFNL5bJEfk3ARWl_7s92t_ZnLqY52LlJ5S5uuL1SC4oAMuLoaUgb2_/s1034/Screenshot%202024-08-03%20180407.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"702\" data-original-width=\"1034\" height=\"217\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg5dpvMyqMQJc3lS6owUxqr7Y_uiaL1qvoFQFC6GeWHVzLIRTECe0zix5ZOOOUjqS6GfIb8oIT-Q_Gq8_oGiLkEPHtY5tSGApMo001cFxgNbXWLKr74uKVMCGxkJLss2XP1Hvk2okuFNL5bJEfk3ARWl_7s92t_ZnLqY52LlJ5S5uuL1SC4oAMuLoaUgb2_/s320/Screenshot%202024-08-03%20180407.png\" width=\"320\" /></a></div><br /><p style=\"text-align: left;\">To complete this function I first needed to work out how long a string is as I noticed that lower and uppercase letters have different pixel lengths. ImageFont has a function that is supposed to tell you the length of a string using the inbuilt font library, but for me it didn't seem to be working. Instead I created my own function that gives a rough idea as to how long the string will be. First I eyeballed using ImageDraw.recatngle() to create a box that was the same length as the text I was using. With a capital letter, my text was 160 pixels, but with all lowercase it was 150 pixels. Dividing that by 6 and working out the difference between that and the first string, I worked out a lower case letter is roughly 25 pixels and an uppercase letter is 35. The function then works out the total number of pixels needed to create the string.</p><p style=\"text-align: left;\"></p><p style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEixWdU7CyTTCiuoX5HwByZAA-GXOMmSfJmbZQs-gIDHCkKEVM0HiMx4h4RWoy2i8CGbazWr69p7uI2jBkZ9IGjAaNYw7UHBhwmtAFFdJztCswx1bKEr7ySqgZ6qYfKf3ayTtug3c5nx-D-vYECqpl7ecM-S7Y7Ohtr4dafh2g7VZ-uOjdA8A_wTMTZLdwP4/s477/Screenshot%202024-08-03%20180420.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"442\" data-original-width=\"477\" height=\"297\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEixWdU7CyTTCiuoX5HwByZAA-GXOMmSfJmbZQs-gIDHCkKEVM0HiMx4h4RWoy2i8CGbazWr69p7uI2jBkZ9IGjAaNYw7UHBhwmtAFFdJztCswx1bKEr7ySqgZ6qYfKf3ayTtug3c5nx-D-vYECqpl7ecM-S7Y7Ohtr4dafh2g7VZ-uOjdA8A_wTMTZLdwP4/s320/Screenshot%202024-08-03%20180420.png\" width=\"320\" /></a></p><p></p><p style=\"text-align: left;\">Using this value I can then divide the width of the image by the string length and the height of the image by the font size, this should give me the amount of text I need to cover the image. I can then use these variables as the maximum range in the for loop that will create the multiline string. The for loops first go through each row using the txt_rows int as the end point, then goes through each column using txt_cols as the end point adding a watermark with a space as it goes. After it finishes with the txt_cols it adds a double line break with '\\n\\n' to give some space between each row. After the loops have been completed, the image is rotated and cropped to match the original size of the image, then merged using Image.alpha_composite, leaving the continuous watermark you see below.&nbsp;</p><div style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjTCuA-nXsBj_CzAEU5YZaSA8hZL-N0dE3UrQ0XZKqfMgUcG5uJ3JSspxz4ZSFmUQz7m-PccVBi9zHGUtZYObVY4gaq-5SUL7uxlLXeQrhgPs0vdIejrj5EcJ5xpItNbXXkXSPfM-NbZXhb1KGEHE1au4ZQpGY3Eqn8FutRqCzyC6N5E4AmO4jNvXelXkDK/s1346/jazzy_watermarked.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1346\" data-original-width=\"758\" height=\"320\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjTCuA-nXsBj_CzAEU5YZaSA8hZL-N0dE3UrQ0XZKqfMgUcG5uJ3JSspxz4ZSFmUQz7m-PccVBi9zHGUtZYObVY4gaq-5SUL7uxlLXeQrhgPs0vdIejrj5EcJ5xpItNbXXkXSPfM-NbZXhb1KGEHE1au4ZQpGY3Eqn8FutRqCzyC6N5E4AmO4jNvXelXkDK/s320/jazzy_watermarked.png\" width=\"180\" /></a></div><p></p><p style=\"text-align: left;\">Once I've made a start on the Tkinter GUI I'm going to add another function where if you just want to add a watermark for advertising purposes rather than for copyright, you can add your name or logo in the bottom right corner. I think that will be it for this post, I have a lot more time tomorrow to work on the Tkinter GUI and I want to try to add this blog to my website and try to work out how to make it function better on mobile devices. So look forward to reading about that next.</p><p style=\"text-align: left;\">Thanks again for checking out this update to my blog, I hope you have a great day!</p><p style=\"text-align: left;\"><br /></p><p style=\"text-align: left;\">References:</p><div style=\"text-align: left;\"><a href=\"https://pillow.readthedocs.io/en/stable/handbook/tutorial.html\" target=\"_blank\">https://pillow.readthedocs.io/en/stable/handbook/tutorial.html<br /></a><a href=\"https://www.youtube.com/watch?v=DWymRxeR-tk\" target=\"_blank\">Pillow Tutorial Youtube</a></div><div style=\"text-align: left;\"><a href=\"https://fonts.google.com/selection\">Watermark Font</a><br /></div><div style=\"text-align: left;\"><a href=\"https://pillow.readthedocs.io/en/stable/reference/ImageDraw.html#PIL.ImageDraw.ImageDraw.text\">Pillow ImageDraw</a><br /></div><div style=\"text-align: left;\"><a href=\"https://pillow.readthedocs.io/en/stable/reference/ImageFont.html\">Pillow ImageFont</a><br /></div>",
            "author": {
                "id": "06093669945308582562",
                "displayName": "Dooques",
                "url": "https://www.blogger.com/profile/06093669945308582562",
                "image": {
                    "url": "//www.blogger.com/img/blogger_logo_round_35.png"
                }
            },
            "replies": {
                "totalItems": "0",
                "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/5311347575091090387/comments"
            },
            "etag": "\"dGltZXN0YW1wOiAxNzIyNzA4ODIxMjM0Cm9mZnNldDogLTI1MjAwMDAwCg\""
        },
        {
            "kind": "blogger#post",
            "id": "4391136563559451172",
            "blog": {
                "id": "2697739541772529687"
            },
            "published": "2024-07-30T11:53:00-07:00",
            "updated": "2024-07-30T23:49:13-07:00",
            "url": "http://dooques.blogspot.com/2024/07/noughts-and-crosses-tic-tac-toe.html",
            "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/4391136563559451172",
            "title": "Noughts and Crosses / Tic Tac Toe",
            "content": "<p></p><h1 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 24pt;\"><span style=\"background-color: transparent; color: #6aa84f; font-size: 23pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: helvetica;\">Welcome!</span></span></h1><h1 style=\"text-align: left;\"><b id=\"docs-internal-guid-da7b9835-7fff-0a66-0e5f-61543f99d8ae\" style=\"font-weight: normal;\"><span style=\"font-family: helvetica;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">This is the next chapter in my development blog, this time I'm working on a new portfolio project from the 100 Days of Code course. The project outline is to create a game of 'Tic-Tac-Toe' or 'Noughts and Crosses' if you're from England like myself. The only requirement for this project is that the game should be playable through the command line similar to the game of Blackjack we created back on day 11 of the course.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">After some thought I decided to go with a 2 dimensional ndarray from NumPy to create the board for the game. From there I should be able to replace digits inside the board using user inputs. Having 9 spaces to choose from, the user could type '1, 3' if they wanted to choose the last digit of the first line. I can then convert that string into a tuple using the .split() method. The spaces in the board will all start blank, with all the positions filled with 0s. Player 1 in the game will use 'X' and Player 2 will use 'O'. The game will take turns between each player, who will type out their moves until one player wins or all spaces are filled, leaving it a draw. If the player wishes to play against the computer, the computer will work out what position will be the best to play based on the player's moves. As the game plays the program will be constantly checking each turn to see if the player is close to getting 3 in a row.&nbsp;</span></p></span></b></h1><h4 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 2pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: helvetica;\">My first step is to be able to print out the board in its current state.</span></span></h4><h1 style=\"text-align: left;\"><b style=\"font-weight: normal;\"><span style=\"font-family: helvetica;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-left: 22pt; margin-right: 22pt; margin-top: 0pt; margin: 0pt 22pt; text-align: center;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: none; display: inline-block; height: 320px; overflow: hidden; width: 253px;\"><img height=\"320\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXeX2mzaDGIkvFESesrLV3oNlp9-x4SmANCQkOo2u0jNH8BVCv5Vlu9d9uztDeUISQJnZpuZh7MWjxlLjvHIid55teG0yKKcwa1CJVw6vP0aCAQ5ERl4ZfqcK0NCN5IiO4nkrdPOldORvqJdjaBzF247aywW?key=lgk0pS_tFLxMG7Nc6m9v8w\" style=\"margin-left: 0px; margin-top: 0px;\" width=\"253\" /></span></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">The board I'm using consists of a 3x3 grid, using digits from 0 to 3 to denote what should be on that tile. 0 is an underscore, 1 is an 'O' and 2 is an 'X'. To print out the tiles currently on the board I'm using two for loops with a range of 3 to iterate through each index from the 9 x 9 grid. Once it selects the tile, it adds the character to a list called row, which is nested in another list called rows. If the tiles have an index of 0 or 1, they have a divider line added as part of a string to their right which will make it much easier to read as a grid when playing the game and needing to see where to go next.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"></p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjOD2FnI50v0Y0I3DxnWmVfeRPOVqiA0ADXA3B_CRcf4LeTSFLxLnfgyPcBZC0nfaJXmffDTwDF6KdVEjE51wGlsS015wR_yD3nDyhEZnMt5cr9r1Y1kN_lNbpWpbZ5yoxjVf7BjAedJeuPj5i-FZs0UTZIXH1uUblBInRMBNNNDRDU2NaUZMbQDwXfQbIh/s226/Screenshot%202024-07-30%20192424.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"154\" data-original-width=\"226\" height=\"154\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjOD2FnI50v0Y0I3DxnWmVfeRPOVqiA0ADXA3B_CRcf4LeTSFLxLnfgyPcBZC0nfaJXmffDTwDF6KdVEjE51wGlsS015wR_yD3nDyhEZnMt5cr9r1Y1kN_lNbpWpbZ5yoxjVf7BjAedJeuPj5i-FZs0UTZIXH1uUblBInRMBNNNDRDU2NaUZMbQDwXfQbIh/s1600/Screenshot%202024-07-30%20192424.png\" width=\"226\" /></a></div><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><p></p></span></b></h1><h4 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 2pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: helvetica;\">Step 2 Allow a user / computer to change the tiles on the board through command/function inputs.</span></span></h4><h1 style=\"text-align: left;\"><b style=\"font-weight: normal;\"><span style=\"font-family: helvetica;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-left: 11pt; margin-right: 11pt; margin-top: 0pt; margin: 0pt 11pt; text-align: center;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: none; display: inline-block; height: 315px; overflow: hidden; width: 320px;\"><img height=\"315\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXdoANn5tFfl-XOlSe1VgQB0F_8k_BfO_8k8qrkzmRQYRSn4c-vxVmDo3_-5CYfqkUzFPFeV3gpFJzgxanyZjpLHPXubnqiIwyG7iWqeu9XSASvQ3z-46tqfvu5E5y_N46_EtKJJgTP5QjlCqfCVUko9Tatd?key=lgk0pS_tFLxMG7Nc6m9v8w\" style=\"margin-left: 0px; margin-top: 0px;\" width=\"320\" /></span></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">This was one of the more difficult parts of the program. It took a lot of trial and error to get the right syntax and make sure I wasn't accidentally resetting a variable before it was returned by the function to make the changes to the board. My plan to use an ndarray really worked out well as changing the tiles once you'd picked a move was just as simple as using the tuple as the index for the tile in the current board.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"font-size: 11pt; white-space-collapse: preserve;\">The player would pick out tiles by typing in the two digits they wanted separated by a comma, this could then be split and cleaned up as long as the player only uses a space between the comma and the 2nd digit. If the player types anything else the function will just loop back on itself and ask the player to reenter their move.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Initially I had the computer player just pick out tiles at random using random.randint() to create the tuples. This was perfect for testing as it is a challenge if you're not paying too much attention. It also helped me pick out some bugs I hadn't thought about along the way. At one point I realised I had put the trigger for a draw before I'd got to checking the diagonal lines meaning the game would end as a draw even though a player had won.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-left: 11pt; margin-right: 11pt; margin-top: 0pt; margin: 0pt 11pt; text-align: center;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: none; display: inline-block; height: 207px; overflow: hidden; width: 320px;\"><img height=\"207\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXdolTSjtzTciIEagl5iJBr9KIxSJpg08Lspt8HzTvUmDk57ktIUYZsyrnul3x6MyFgLVSmFNtxv_J1svAajMLh_RRMVNLCUc1f-2q_o8edEj3c9gXCbmNtTjMxN3kFuEIEhEv-B1xFFKo_9JaRBGb-AO3fj?key=lgk0pS_tFLxMG7Nc6m9v8w\" style=\"margin-left: 0px; margin-top: 0px;\" width=\"320\" /></span></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">One function I created that was incredibly useful was the spaces_used method which would go through all the tiles on the board and make sure the player or computer doesn't choose the same method again. This helped a lot when bug testing if I would accidentally mistyped an index. As I was writing this method I would have print functions showing every action the computer player would take, and the amount of different attempts the computer could get through in a split second before getting the right one still amazes me.</span></p></span></b></h1><h4 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 2pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: helvetica;\">Step 3 Check if the player has won after each move.</span></span></h4><h1 style=\"text-align: left;\"><b style=\"font-weight: normal;\"><span style=\"font-family: helvetica;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-left: 11pt; margin-right: 11pt; margin-top: 0pt; margin: 0pt 11pt; text-align: center;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: none; display: inline-block; height: 315px; overflow: hidden; width: 320px;\"><img height=\"315\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXdglJX-EkEb8C_9o5SfueOWTbHjzNecLVN9P33gFLEpmtpdecylZlHF-Qb64ihQurxwjnZaTqBdefh7T7iZa8MwHNUStTvftFNFikeLmNO_LxPbYOtv7qUblvMPz3-Fw8kCr9Tgv73ErWZpTw696CBWXci8?key=lgk0pS_tFLxMG7Nc6m9v8w\" style=\"margin-left: 0px; margin-top: 0px;\" width=\"320\" /></span></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Getting the syntax right for this part was probably the biggest struggle of the project. I initially had 3 for loops going for each direction of the line. It was only until I started working through this blog post that I realised I could create a nested function within check_score to check each line without bloating the main body of the function.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">This time I've used ndarray slicing to create 2 lists with the rows and columns from the board. The last list I had to create&nbsp;manually as there was no easy way to automate diagonal lines that I could think of and there were only two to choose from.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">The function then iterates through each list using if statements to see if all the tiles match. If they do, it returns a string that says 'winner' and if the player_move is 'False', meaning the player turn has been taken. The Player wins and a winning message is displayed. If the player turn is 'True' meaning the computer has just taken a turn, it displays a commiseration message as the player has lost. If all the tiles are checked with no 3 in a row match, a message is displayed stating a draw.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"></p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgAMR7KukyqIq5OrUjEIbQAW-VYR79k-8O9MgjyX6lIiiK1PctIEY8-iyo8fdtEyginzAwhqljHnM21Ad1pW7qWNXlZi9R2wd0jtY3IlnjEWx2bJlUrOeFp553o0UpY1l1XzaFkYP2sc3yOa_V2sM0ayEzt-5_BL55bTUuGRyTPCzkEIyqTQT48UfL78AoK/s473/Screenshot%202024-07-30%20193543.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"202\" data-original-width=\"473\" height=\"137\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgAMR7KukyqIq5OrUjEIbQAW-VYR79k-8O9MgjyX6lIiiK1PctIEY8-iyo8fdtEyginzAwhqljHnM21Ad1pW7qWNXlZi9R2wd0jtY3IlnjEWx2bJlUrOeFp553o0UpY1l1XzaFkYP2sc3yOa_V2sM0ayEzt-5_BL55bTUuGRyTPCzkEIyqTQT48UfL78AoK/s320/Screenshot%202024-07-30%20193543.png\" width=\"320\" /></a></div><p></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Along with announcing the winners, losers or a draw, the game will also keep track of the 'Running Score', which is added to and displayed after a defeat or victory, this works for both one and two player modes.</span></p></span></b></h1><h4 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 2pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: helvetica;\">Step 4 Create a single player &amp; two player mode.</span></span></h4><h1 style=\"text-align: left;\"><b style=\"font-weight: normal;\"><span style=\"font-family: helvetica;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-left: 11pt; margin-right: 11pt; margin-top: 0pt; margin: 0pt 11pt; text-align: center;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: none; display: inline-block; height: 320px; overflow: hidden; width: 249px;\"><img height=\"320\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXdjdsFR7ciXuCo9WIcUq5ODLHAVitt1AxBQTHxJAeGolmWKiQCFTxv1tvLyvN8ZJm7WG38KzIRhU3iAVXMrj2ptb4J-ic4FGkHf6vNpqKumkVCUV_BizJLNLXOUWPGvKfv7lh-p2r-Zf6drQ3ZZql8CVf6U?key=lgk0pS_tFLxMG7Nc6m9v8w\" style=\"margin-left: 0px; margin-top: 0px;\" width=\"249\" /></span></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Creating the two player mode was fairly straightforward, I pretty much just copy and pasted the while loop for the single player mode, added a second player and changed</span><span style=\"font-size: 11pt; white-space-collapse: preserve;\"> player_turn to the mode variable. This variable changes from 1 to 2 depending on who's just played a turn and determines what symbol will be used for tiles.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-left: 11pt; margin-right: 11pt; margin-top: 0pt; margin: 0pt 11pt; text-align: center;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: none; display: inline-block; height: 79px; overflow: hidden; width: 320px;\"><img height=\"79\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXf4YDz356tT-yRWhzM6KhcmCB9Bbdl9DH6qsbLimzyJS5kfZlQkYXJgVH_AziIyL68qIqbMZAJMwCpeuRjg6WHfpW0U3nI0_SRqssNHxaKDpayWFbqCz-TBesPidd42y4aLTt1mPUJf8K3DincXqqjzaVTq?key=lgk0pS_tFLxMG7Nc6m9v8w\" style=\"margin-left: 0px; margin-top: 0px;\" width=\"320\" /></span></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">I also created while loop the player will see when running the game, if the player types 'one' they will be taken to a single player game and typing 'two' will take them to the two player version.</span></p></span></b></h1><h4 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 2pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: helvetica;\">Step 4 Create an AI that can check what the next best move should be.</span></span></h4><h1 style=\"text-align: left;\"><b style=\"font-weight: normal;\"><span style=\"font-family: helvetica;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-left: 11pt; margin-right: 11pt; margin-top: 12pt; margin: 12pt 11pt; text-align: center;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: none; display: inline-block; height: 207px; overflow: hidden; width: 320px;\"><img height=\"207\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXf8wujglQh2-m0PrP3EnDoNx3QgN_kj38Yi9b_0e0CAm2PviOF7BmYaJQ2Ds9XQqJbhzrcLEF0f9qrD9P-L_wxVC9jzEXphpDb-R27tWOYJU4BVXdlZgtS0Ed4eJ_hsb_n5ORPtppydvROXt32WvTXOO8PL?key=lgk0pS_tFLxMG7Nc6m9v8w\" style=\"margin-left: 0px; margin-top: 0px;\" width=\"320\" /></span></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt; text-align: left;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">This was actually much more straightforward than I was expecting. I think after having created the check_score method from earlier I had a good idea of how I wanted the computer AI to work. My plan was to have the AI go through lists of potential lines available on the board and check whether there were more than 2 of each symbol already filled. I ended up using two nested for loops to create the horizontal and vertical lines to be checked and redoing the diagonal lines just as I had in check_score. I put these in the __init__ function as it wasn't something that needed to be remade over again and it also cleaned up function. I also created lists from lines in the active board by copy and pasting the same code that I used in check_score.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-left: 11pt; margin-right: 11pt; margin-top: 0pt; margin: 0pt 11pt; text-align: center;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: none; display: inline-block; height: 319px; overflow: hidden; width: 320px;\"><img height=\"319\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXcFSDIA29ybU6xOGUS2_mJOJScIQ8Bedx3ENlsPAZHtrPpE-aeJCcxolBvi2ElQzN5z9HGvyS3a6OljNuGnlIRDW9xtgmMHUb8Q1Ojg8tG_pflmeyJ7g7KC2lkQ-T8CaDK9mQwEmk2nWb7HXgoFcW6gfmU?key=lgk0pS_tFLxMG7Nc6m9v8w\" style=\"margin-left: 0px; margin-top: 0px;\" width=\"320\" /></span></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">After that, it was on to the hardest part of the AI, writing the syntax for checking each line, I had the same issue here as before where the syntax took a while to get my head around. I also copied my check_score function by having each line be iterated using a nested function. This function would go through each digit in the line, if it encounters a 2 it registers it as an 'x' for a player tile. If it encounters a 1 it registers as a 'y' for a computer tile. If at the end of the loop it finds there are two 'x' tiles or two 'y' tiles, it then adds it to a list of playable moves which can be returned back to the computer_turn function for use.&nbsp;If the line contains both an 'x' and a 'y' it will just ignore it and carry on to the next one.</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-left: 11pt; margin-right: 11pt; margin-top: 0pt; margin: 0pt 11pt; text-align: center;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: none; display: inline-block; height: 315px; overflow: hidden; width: 320px;\"><img height=\"315\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXfmRn19m4bbQlm2LJZ6BZ8qKR9hTZ48P7SVAewUjhrhdC7hLiLcJZSQKMRP45jKXOyQx0v2I4Aw0KJk6T2URV9-GozOhsuiefV3CO2FftFqxLgVKvrJ2jNNgckjzCxM5dWBHO2kdFoD_eGPpsn_xC-AAB4?key=lgk0pS_tFLxMG7Nc6m9v8w\" style=\"margin-left: 0px; margin-top: 0px;\" width=\"320\" /></span></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">I didn't want to make the computer player too difficult so I added a random.randint() variable called perception_check that ranges from 0 to 20. If the computer gets above 10 it passes the perception check and is allowed to choose from one of the potential moves it has stored. If it fails the perception check it will just play a move at random. This was </span><span style=\"font-size: 11pt; white-space-collapse: preserve;\">inspired by my recent playthrough of Baldur's Gate 3, where dice rolls are heavily embedded into the gameplay, including perception checks. Almost everything you do that requires skill has a dice roll, and they can be incredibly unforgiving. I hope the computer gets as frustrated as I do when failing a check...</span></p></span></b></h1><h4 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 2pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: helvetica;\">Step 5 Add instructions and Ascii art that will print at the beginning of each game.</span></span></h4><h1 style=\"text-align: left;\"><b style=\"font-weight: normal;\"><span style=\"font-family: helvetica;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-left: 11pt; margin-right: 11pt; margin-top: 0pt; margin: 0pt 11pt; text-align: center;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: none; display: inline-block; height: 264px; overflow: hidden; width: 320px;\"><img height=\"264\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXeW3BZihvPVjb8Yb3iA0YxpWadPHWIkEhPoA-ah9dBUnEgGRV_WpF8U2g87-AHjBhr97PO-puyE2oPI_OePj2K87-DgJjASyj1pB0nRJg4vefMfTGh3HYTYWXUvMCXbJ2rkrYfQ4JcsL849WE0qw0waFebO?key=lgk0pS_tFLxMG7Nc6m9v8w\" style=\"margin-left: 0px; margin-top: 0px;\" width=\"320\" /></span></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">I tried to make the instructions as clear as possible, so that even if you're an alien from another planet and you've never heard of Noughts and Crosses or Tic Tac Toe, you will still be able to play. I also used some fairly simple ascii art to make the game a little more interesting for anyone interested enough to download and play it.&nbsp;</span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-left: 11pt; margin-right: 11pt; margin-top: 0pt; margin: 0pt 11pt; text-align: center;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"border: none; display: inline-block; height: 196px; overflow: hidden; width: 320px;\"><img height=\"196\" src=\"https://lh7-rt.googleusercontent.com/docsz/AD_4nXesRJRCA_1GhSprZKSu_LcF2SYB75x1vqTDMyxAC_P4jsm2lynSySjm-oQ0lsixky1TBeqb3LBmyKZCvWsRHAJMp9p6iSvtX5ChuXsaRksXh3MJqOB2Pu_sqgjkBRjyI8b4o8sv-DZHOq9M_IrdY4z6wvVM?key=lgk0pS_tFLxMG7Nc6m9v8w\" style=\"margin-left: 0px; margin-top: 0px;\" width=\"320\" /></span></span></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">The code here is fairly simple, I'm just using print statements for the instructions and a while loop to make sure there are no spelling errors when choosing which mode you want to play.</span></p></span></b></h1><h4 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 2pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: helvetica;\">Project complete</span></span></h4><div><span style=\"font-family: helvetica; font-size: 11pt; white-space-collapse: preserve;\"><br /></span></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhpnWg6RHfJqSopN7aXG7j7XN5sGwS4e7RvjaRy6PecH5viQLxSZYUvY-l5S5qKywEjid6zinNxv6LCTA8jRNQKAo-ew3bSiSTsg6f5DN4rBvFLBSL_HrjfJbb-3svxTMsSjwAsVp1O1Nt8_mA8IPTnsq6cxTw1ZnwjBzSc8sPxyVAYp0E52sgdSJn71Uzn/s1102/Screenshot%202024-07-30%20192326.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1102\" data-original-width=\"928\" height=\"320\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhpnWg6RHfJqSopN7aXG7j7XN5sGwS4e7RvjaRy6PecH5viQLxSZYUvY-l5S5qKywEjid6zinNxv6LCTA8jRNQKAo-ew3bSiSTsg6f5DN4rBvFLBSL_HrjfJbb-3svxTMsSjwAsVp1O1Nt8_mA8IPTnsq6cxTw1ZnwjBzSc8sPxyVAYp0E52sgdSJn71Uzn/s320/Screenshot%202024-07-30%20192326.png\" width=\"269\" /></a></div><span style=\"font-family: helvetica; font-size: 11pt; white-space-collapse: preserve;\"><br /></span></div><div><span style=\"font-family: helvetica; font-size: 11pt; white-space-collapse: preserve;\">All in all, this was a fairly satisfying project to complete, it took me about 5 days total, working an hour or so in the morning before work and a couple hours after work each night to get it to its current functional state. I believe I have covered a lot of potential for human error with inputs using while loops to catch mistakes and a try block within the player_turn function as it seemed to churn out some random errors occasionally.</span></div><h1 style=\"text-align: left;\"><b style=\"font-weight: normal;\"><span style=\"font-family: helvetica;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">If you've gotten this far and you're interested in trying my game, please check out my <a href=\"https://github.com/Dooques/tic-tac-toe\">Github </a>page! All of my projects are available there and desperate for some constructive criticism.&nbsp;</span></p></span></b></h1><h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 4pt; margin-top: 18pt;\"><span style=\"background-color: transparent; color: #6aa84f; font-size: 17pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: helvetica;\">Thank you for reading!</span></span></h2><h1 style=\"text-align: left;\"><b style=\"font-weight: normal;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 12pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: helvetica;\">Thank you so much for reading about my project, hopefully I will see you again in my next blog post!</span></span></p></b></h1><h4 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 2pt; margin-top: 12pt;\"><span style=\"background-color: transparent; color: black; font-size: 11pt; font-style: normal; font-variant: normal; font-weight: 700; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"font-family: helvetica;\">References</span></span></h4><h1 style=\"text-align: left;\"><span style=\"font-weight: normal;\"><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><a href=\"https://www.blogger.com/blog/post/edit/2697739541772529687/4391136563559451172#\" style=\"text-decoration-line: none;\"><span style=\"color: #1155cc; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-numeric: normal; font-variant-position: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space-collapse: preserve;\"><span style=\"font-family: helvetica;\">https://www.geeksforgeeks.org/how-to-replace-values-in-a-list-in-python/</span></span></a></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><a href=\"https://www.blogger.com/blog/post/edit/2697739541772529687/4391136563559451172#\" style=\"text-decoration-line: none;\"><span style=\"color: #1155cc; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-numeric: normal; font-variant-position: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space-collapse: preserve;\"><span style=\"font-family: helvetica;\">https://www.programiz.com/python-programming/methods/list/index</span></span></a></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><a href=\"https://www.blogger.com/blog/post/edit/2697739541772529687/4391136563559451172#\" style=\"text-decoration-line: none;\"><span style=\"color: #1155cc; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-numeric: normal; font-variant-position: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space-collapse: preserve;\"><span style=\"font-family: helvetica;\">https://docs.python.org/3/library/stdtypes.html#str.split</span></span></a></p><p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"><a href=\"https://www.blogger.com/blog/post/edit/2697739541772529687/4391136563559451172#\" style=\"text-decoration-line: none;\"><span style=\"color: #1155cc; font-size: 11pt; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-numeric: normal; font-variant-position: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space-collapse: preserve;\"><span style=\"font-family: helvetica;\">https://numpy.org/doc/stable/reference/arrays.ndarray.html</span></span></a></p><br /></span></h1>",
            "author": {
                "id": "06093669945308582562",
                "displayName": "Dooques",
                "url": "https://www.blogger.com/profile/06093669945308582562",
                "image": {
                    "url": "//www.blogger.com/img/blogger_logo_round_35.png"
                }
            },
            "replies": {
                "totalItems": "0",
                "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/4391136563559451172/comments"
            },
            "etag": "\"dGltZXN0YW1wOiAxNzIyNDA4NTUzNTI5Cm9mZnNldDogLTI1MjAwMDAwCg\""
        },
        {
            "kind": "blogger#post",
            "id": "6725580952434802792",
            "blog": {
                "id": "2697739541772529687"
            },
            "published": "2024-07-22T11:14:00-07:00",
            "updated": "2024-07-22T11:14:55-07:00",
            "url": "http://dooques.blogspot.com/2024/07/portfolio-project-part-3-website.html",
            "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/6725580952434802792",
            "title": "Portfolio Project Part 3 - Website Deployed!",
            "content": "<h1 style=\"text-align: left;\"><span style=\"color: #6aa84f;\">Welcome!</span></h1><p style=\"text-align: left;\">For this update to my Dev Blog I am going to be deploying my developer portfolio website. I am planning to deploy this project through Render, it has an Individual plan which allows you to run websites for free. I've done some adjustments to the layout since I posted the last update to my portfolio project.</p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhr_-zcDaRdQhM6vdspBA4ZWoltHrBOlUekD0az2bcxkdWBER1sDWOguwu6PvsJRLkot-u3cq9m5pvPnRFMo6wCmxn6T29JbmBHOwZj2VkY7QDUoaUr3fIs6bD-lE5Z-hPE2lauc1tZtWw8TIBqhnLlgJOrdSEDl16QB7sg_j3BZIg1gvv62UC5o4Ss9Z-i/s1663/Screenshot%202024-07-20%20145456.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1293\" data-original-width=\"1663\" height=\"368\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhr_-zcDaRdQhM6vdspBA4ZWoltHrBOlUekD0az2bcxkdWBER1sDWOguwu6PvsJRLkot-u3cq9m5pvPnRFMo6wCmxn6T29JbmBHOwZj2VkY7QDUoaUr3fIs6bD-lE5Z-hPE2lauc1tZtWw8TIBqhnLlgJOrdSEDl16QB7sg_j3BZIg1gvv62UC5o4Ss9Z-i/w474-h368/Screenshot%202024-07-20%20145456.png\" width=\"474\" /></a></div><div><br /></div><p style=\"text-align: left;\"></p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjRYtONpPAjuxp9XrdOpQ9pOYOrbk0t2tYIdymJLOxRlku5QQZFP_ARRmrOSjBU8j9WijG4yp34SSdhIvkujFqICYivUSQMb_MnhVMBbRLgPkRo9-tvMLyVq2p2yG5Gn-c-7036jEoWdtY18_fsHppj_lDSWobGB7bz72yYAs3KioOCXvFaanguIcDdIT0u/s1378/Screenshot%202024-07-20%20145521.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1332\" data-original-width=\"1378\" height=\"461\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjRYtONpPAjuxp9XrdOpQ9pOYOrbk0t2tYIdymJLOxRlku5QQZFP_ARRmrOSjBU8j9WijG4yp34SSdhIvkujFqICYivUSQMb_MnhVMBbRLgPkRo9-tvMLyVq2p2yG5Gn-c-7036jEoWdtY18_fsHppj_lDSWobGB7bz72yYAs3KioOCXvFaanguIcDdIT0u/w476-h461/Screenshot%202024-07-20%20145521.png\" width=\"476\" /></a></div><br /><p></p><p style=\"text-align: left;\">I was thinking about changing the colours of the website I was using as I'm not sure they feel as professional as they could be. I've spent a lot of time changing and adjusting the colours of different things so I don't want to keep working on that when I could spending my time working on projects.</p><p style=\"text-align: left;\">I began setting up the render page and went back to the Udemy module about deploying a website. It reminded me that gunicorn is the package that you need to setup a WGSI as servers can't run python applications. I do feel like I'm still not fully understanding the logic behind gunicorn, WGSI and web servers, this is definiely something I'll need to do a few times before it really sinks in.</p><p style=\"text-align: left;\">I deployed my website through render fairly easily, it takes the last push on the Git repository and publishes it as a live website. The annoying thing is that if you don't pay for an account you only have about 15 minutes of activity before the site 'spins down' and stops loading. I decided to go for it and get the $7 a month fee just so I can make sure the site is active for any prospecting employers or fellow devs to check it out.&nbsp;</p><p style=\"text-align: left;\"><a href=\"https://dooques-portfolio.onrender.com/\">https://dooques-portfolio.onrender.com/</a></p><p style=\"text-align: left;\">I wasn't happy with the url of the portfolio looking so boring, so to add a little pizazz I went for a GoDaddy domain. I didn't see some great opinions on GoDaddy when trying to research DNS forwarding so hopefully I haven't made a grave error and it lasts me out for the next year. I saw some people saying other domain services were better so I'll do some research in future before making another commitment. I went for <a href=\"http://www.dooques.com\">dooques.com</a>&nbsp;as that is my online moniker and generally available for use when I need a username. I still need to work out why it shows the render url instead of https://dooques.com when I go through dooques.com instead of www.dooques.com.&nbsp;</p><p style=\"text-align: left;\">After deploying the website I've realised I forgot to add one vital component of a portfolio, a way to get in contact. I just added in some links to my LinkedIn, GitHub and Twitter/X account at the bottom of the index template. I plan to add a contact form eventually but I wouldn't mind putting my focus on some other portfolio projects first. I quite like how render will just automatically update to the newest push if there's been an update. It makes the website feel very smooth.</p><p style=\"text-align: left;\">Keep checking back for further updates, I'm going to keep working on my Portfolio projects and update my website as I go!</p><h4 style=\"text-align: left;\"><span style=\"color: #45818e;\">References</span></h4><p style=\"text-align: left;\"><a href=\"https://colorhunt.co/palette/4a249d009fbdf9e2aff6f5f5\">https://colorhunt.co/palette/4a249d009fbdf9e2aff6f5f5</a></p>",
            "author": {
                "id": "06093669945308582562",
                "displayName": "Dooques",
                "url": "https://www.blogger.com/profile/06093669945308582562",
                "image": {
                    "url": "//www.blogger.com/img/blogger_logo_round_35.png"
                }
            },
            "replies": {
                "totalItems": "0",
                "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/6725580952434802792/comments"
            },
            "etag": "\"dGltZXN0YW1wOiAxNzIxNjcyMDk1OTYyCm9mZnNldDogLTI1MjAwMDAwCg\""
        },
        {
            "kind": "blogger#post",
            "id": "4487294852205109797",
            "blog": {
                "id": "2697739541772529687"
            },
            "published": "2024-07-20T02:25:00-07:00",
            "updated": "2024-07-20T02:25:49-07:00",
            "url": "http://dooques.blogspot.com/2024/07/game-trophy-collection-part-2.html",
            "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/4487294852205109797",
            "title": "Game Trophy Collection Part 2",
            "content": "<h2 style=\"text-align: left;\"><span style=\"color: #6aa84f;\">Welcome!</span></h2><p style=\"text-align: left;\">Hi there, I'm going to be continuing to work on my Portfolio Project that aims to collect trophies/achievements from different gaming platforms. In my last post I had started to work on using the <a href=\"https://developer.valvesoftware.com/wiki/Steam_Web_API#Game_interfaces_and_methods\">Steam Web API</a>&nbsp;to collect Data on achievements I have unlocked for my game library. So far I have completed a steam_api class that will return a dictionary of games and the achievements of any steam user that has set their account to be public.</p><div><br /></div><h4 style=\"text-align: left;\"><span style=\"color: #45818e;\">Current Goal</span></h4><p style=\"text-align: left;\"><span style=\"font-weight: normal;\">My goal in this post is to create the templates for displaying the games using HTML. If that's achievable, then my next goal is to create a way for users to log in and save their game data, so they don't need to create it every time they visit the website.</span></p><div><span style=\"font-weight: normal;\"><br /></span></div><h4 style=\"text-align: left;\"><span style=\"color: #674ea7;\">Displaying the Data</span></h4><p style=\"text-align: left;\">It's taken me a couple days to get through this part as I've been back to work and only coding for a few hours a day before and after work, while also trying to go running and get started at a new gym.&nbsp;</p><p style=\"text-align: left;\">The longest struggle for me was getting the achievements to display under the name of the game. I had misplaced a variable within a for loop that was causing the dictionary of data to get reset each time I iterated through, leaving no achievements to display... Very frustrating. Once I figured out my rookie mistake.&nbsp;</p><p style=\"text-align: left;\">I used asciiart.eu to create the title displayed at the top of the page, I am planning to go for an old GameFAQs guide with minimal colour as the styling for the website.&nbsp;</p><p style=\"text-align: left;\"><br /></p><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhMDRwWLd76QxuOK_fWBMKSLLPqm0-GBuveQOcT79vgxxRc2jTEm80Uq5MIy1vPqwjZEumMf3D3RWDIccmGqX-2d8xdkMwhVom3MW98UoqNL7CLURYKzg8C0bGYp2k8khch44o7_kO-njHAYGnQBFvNh4SEzALLilWzQD8zaaDqwYBUgOqalsLGaZFy8ePW/s1305/Screenshot%202024-07-16%20194926.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1305\" data-original-width=\"1222\" height=\"320\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhMDRwWLd76QxuOK_fWBMKSLLPqm0-GBuveQOcT79vgxxRc2jTEm80Uq5MIy1vPqwjZEumMf3D3RWDIccmGqX-2d8xdkMwhVom3MW98UoqNL7CLURYKzg8C0bGYp2k8khch44o7_kO-njHAYGnQBFvNh4SEzALLilWzQD8zaaDqwYBUgOqalsLGaZFy8ePW/s320/Screenshot%202024-07-16%20194926.png\" width=\"300\" /></a></div><p><br /></p></div><p style=\"text-align: left;\">This part ended up taking much longer than I expected as I'm still learning how to use HTML &amp; CSS styling. Getting the achievements to display without any styling wasn't terribly difficult comparitively but now I've utilized a grid system to display 3 achievements from each game as a card. I would like to eventually adjust how many columns are displayed when viewing the page on a phone, but for now I'm quite pleased with the progress I've made with the styling and want to focus more on website functionality.&nbsp;</p><div><p style=\"text-align: left;\"><br /></p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjzuoOh6AiIemTrGaSvXAC2_n9e3hve6jGIIt-F_Xq6dySIDb8wUxWyo-wbM_JByaIr6FxXFgSJCfpv4FOlcLGqzqde3LLbjrlLjttK2sPyj91h8Vy33mhp9dsSXfdI70Q4KMDrX1PXDY5E9dI9CEi3n2gKnEh_pa_KbeUDveiLl2BEzMLbQQ04CinCMumI/s1402/Screenshot%202024-07-20%20081840.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1062\" data-original-width=\"1402\" height=\"242\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjzuoOh6AiIemTrGaSvXAC2_n9e3hve6jGIIt-F_Xq6dySIDb8wUxWyo-wbM_JByaIr6FxXFgSJCfpv4FOlcLGqzqde3LLbjrlLjttK2sPyj91h8Vy33mhp9dsSXfdI70Q4KMDrX1PXDY5E9dI9CEi3n2gKnEh_pa_KbeUDveiLl2BEzMLbQQ04CinCMumI/s320/Screenshot%202024-07-20%20081840.png\" width=\"320\" /></a></div></div><p style=\"text-align: left;\"><br /></p><p style=\"text-align: left;\">I've learned a lot through this section of the project. What I've learned through Angela Yu's 100 Days of Code was definitely challeneged here. I used Bootstrap templates as my basis for the styling, but I'm learning more vanilla CSS that I can combine with it. In this project I've used a CSS stylesheet for colouring the different sections of the website and creating the grid system, but all of the margins and flex boxes were done using bootstrap classes. The combination of classes with a stylesheet was a nice balance that left minimal class bloating for the project in it's current state.</p><p style=\"text-align: left;\"><br /></p><h4 style=\"text-align: left;\"><span style=\"color: #cc0000;\">Future Goals</span></h4><div><ul style=\"text-align: left;\"><li>SQL Database with users, game systems and game achievements.</li><li>Login/Sign up page.</li><li>Customisable and/or AI generated profile page.</li><li>'For You' style page where you can see other user's achievements / posts.</li></ul></div><div><br /></div><h4 style=\"text-align: left;\"><span style=\"color: #cc0000;\">References</span></h4><div><a href=\"https://www.asciiart.eu/text-to-ascii-art\">Ascii Art</a><br /></div><div><a href=\"https://colorhunt.co/palette/17153b2e236c433d8bc8acd6\">Colour Palette</a><br /></div><div><a href=\"https://gamefaqs.gamespot.com/ps/197341-final-fantasy-vii/faqs/45703\">GameFAQs guide for FF7</a><br /></div><br />",
            "author": {
                "id": "06093669945308582562",
                "displayName": "Dooques",
                "url": "https://www.blogger.com/profile/06093669945308582562",
                "image": {
                    "url": "//www.blogger.com/img/blogger_logo_round_35.png"
                }
            },
            "replies": {
                "totalItems": "0",
                "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/4487294852205109797/comments"
            },
            "etag": "\"dGltZXN0YW1wOiAxNzIxNDY3NTQ5MDk5Cm9mZnNldDogLTI1MjAwMDAwCg\""
        },
        {
            "kind": "blogger#post",
            "id": "3246441680144261659",
            "blog": {
                "id": "2697739541772529687"
            },
            "published": "2024-07-11T05:17:00-07:00",
            "updated": "2024-07-11T12:39:41-07:00",
            "url": "http://dooques.blogspot.com/2024/07/game-tropy-collection.html",
            "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/3246441680144261659",
            "title": "Game Tropy Collection",
            "content": "<h2 style=\"text-align: left;\"><span style=\"color: #6aa84f;\">Introduction</span></h2><div>Hi there! Welcome back to my blog, today I'm going to be working on my Portfolio Project again today, this will be part 3. I've renamed the blog title as I've had an idea for my final entry in the Portfolio, I was going to add my movie database project that shows off my knowledge of SQLite and APIs. But I was thinking that instead of using the stock project from the course, I should remake the Database Project as a collection of my videogames and trophies across multiple gaming platforms.&nbsp;</div><div><br /></div><div>It would be fun to be able to sort the games by how many trophies I have, whether I have multiple trophies on different systems, genres of games I play the most, there's quite a few possibilities to work with. With those comparisons, it could also show off some of the data analysis skills from the data science section.</div><div><br /></div><div>I'm starting this off as a new project in PyCharm because I don't want to make the same silly mistake I've made trying to create GitHub repositories, time for some positive reinforcement!</div><div><br /></div><h2 style=\"text-align: left;\">Git Init</h2><div>I've set up a more or less basic template for a flask application, with a few sqlalchemy packages I've used in previous iterations of this type of project. This time I'm going to add the .gitignore directly to the project file before pushing to the remote. The last few times I tried creating it in the repository and then pushing it to Git, which just made everything more complicated as there would end up being two branches.&nbsp;</div><div><br /></div><div>I've just pushed the commit to Git and it has successfully updated on the website which is great, I'll definitely be doing it this way from here on out...</div><div><br /></div><h2 style=\"text-align: left;\">&nbsp;Steam API</h2><div>First on the list of APIs is the steam API, hopefully the documentation is straight forward and easy to decipher, learning to use documentation is definitely one of the harder things to do as a beginner. Some documentation has really nicely laid out tutorial-esque sections that are really useful for getting started, whereas other ones are very obtuse and contain a lot of jargon that doesn't make a lot of sense if you haven't been coding for 10 years already.</div><div><br /></div><div>The steam API has a few extra steps that so far have been pretty straight forward, but the API call I need will require parsing an xml file which is completely new to me. I found a package called Element Tree via Stack Overflow which is native to python. I'm going to go through the Python Docs as the Stack Overflow example seemed to cause some error and I'm not sure just yet if it's my fault or whether the example is now deprecated.</div><div><br /></div><div>Using ElementTree was a lot more simple than I expected, the Python Documentation did an excellent job of explaining how to iterate over the xml file.</div><div><br /></div><div>I've created 3 functions so far in my SteamAPI Object, one to find the steamID, the games owned by the user and achievements for a particular game they own. It's been pretty rewarding to create this class that can find all this information. It's making me feel a little self conscious about the information I have on steam, which is not much, but if I can access it, anyone else can definitely access it and potentially have more nefarious means to use that data.</div><div><br /></div><div>I've been working on collecting all the data from the API and outputting it in a more easily readable format. It's taken me a good couple hours and I've managed to get all the steam achievement data into a nice little list that should hopefully make the next steps a lot easier to deal with. It definitely helps that my friend Kristina who has barely any steam achievements and only 6 steam apps is letting me use her as the guinea pig. Once I try using my library of 140 games, I'm really gonna know if my program is working....&nbsp;</div><div><br /></div><div>Here's my code for formatting the data, I've left in my print statements for now to let you see how I worked it all out. I'm rather proud I managed to successfully use conditional dictionary comprehension in the final product.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhZ8Fa5_AkoQSYJa53yo_oJJfq3fMTb5D4k9dWYp3X4UqCW2XsvdAoheK-QMCJrs6OA_t_pX16TU-LF-j55xxV_KpfYFuGcn1Y8bBa8tra56s9yHTWewK1rxkiV4a_gKLnaxLcmI9W8gxmQfsBQHqDo6T9ZFKmlFACoDfKdSp8vjHCNMP8T8kOjUvkzwH1U/s1777/Screenshot%202024-07-11%20195339.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1397\" data-original-width=\"1777\" height=\"478\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhZ8Fa5_AkoQSYJa53yo_oJJfq3fMTb5D4k9dWYp3X4UqCW2XsvdAoheK-QMCJrs6OA_t_pX16TU-LF-j55xxV_KpfYFuGcn1Y8bBa8tra56s9yHTWewK1rxkiV4a_gKLnaxLcmI9W8gxmQfsBQHqDo6T9ZFKmlFACoDfKdSp8vjHCNMP8T8kOjUvkzwH1U/w608-h478/Screenshot%202024-07-11%20195339.png\" width=\"608\" /></a></div><p style=\"text-align: left;\"><span>Next I would like to find a way to get images I can display on the webpage for each game &amp; trophy.</span></p><h4 style=\"text-align: left;\"><span>GitHub</span></h4><div><span><a href=\"https://github.com/Dooques/achievement_collector\">https://github.com/Dooques/achievement_collector</a><br /></span></div><h4 style=\"text-align: left;\"><span style=\"color: #45818e;\">References</span></h4><div><a href=\"https://docs.python.org/3/library/xml.etree.elementtree.html\">https://docs.python.org/3/library/xml.etree.elementtree.html</a></div><div><a href=\"https://docs.python.org/3/tutorial/datastructures.html\">https://docs.python.org/3/tutorial/datastructures.html</a></div><div><a href=\"https://developer.valvesoftware.com/wiki/Steam_Web_API#GetPlayerSummaries_.28v0002.29\">https://developer.valvesoftware.com/wiki/Steam_Web_API#GetPlayerSummaries_.28v0002.29</a></div><div><br /></div><h4 style=\"text-align: left;\"><span style=\"color: #cc0000;\">Coding Music!</span></h4><div><a href=\"https://www.youtube.com/watch?v=zyDNVac00Ys\">https://www.youtube.com/watch?v=zyDNVac00Ys</a></div><div><a href=\"https://www.youtube.com/watch?v=YtYuFeqyGEk\">https://www.youtube.com/watch?v=YtYuFeqyGEk</a><br /></div><div><a href=\"https://www.youtube.com/watch?v=6YP_qUFOleU\">https://www.youtube.com/watch?v=6YP_qUFOleU</a><br /></div>",
            "author": {
                "id": "06093669945308582562",
                "displayName": "Dooques",
                "url": "https://www.blogger.com/profile/06093669945308582562",
                "image": {
                    "url": "//www.blogger.com/img/blogger_logo_round_35.png"
                }
            },
            "replies": {
                "totalItems": "0",
                "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/3246441680144261659/comments"
            },
            "etag": "\"dGltZXN0YW1wOiAxNzIwNzI2NzgxNjQzCm9mZnNldDogLTI1MjAwMDAwCg\""
        },
        {
            "kind": "blogger#post",
            "id": "7716155956636519548",
            "blog": {
                "id": "2697739541772529687"
            },
            "published": "2024-07-07T23:35:00-07:00",
            "updated": "2024-07-08T11:46:27-07:00",
            "url": "http://dooques.blogspot.com/2024/07/portfolio-project-part-2.html",
            "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/7716155956636519548",
            "title": "Portfolio Project Part 2",
            "content": "<h1 style=\"text-align: left;\"><span style=\"color: #6aa84f;\">Portfolio Project Part 2!</span></h1><div>Welcome back, today I'm going to be working on my portfolio again. My goal today is to get four projects up and running that will work seamlessly on the website and have links to the GitHub pages. I spent a long time yesterday working on my index template, trying to get it to look minimal with nice colours. Hopefully I've done it in a fairly tasteful way, where it doesn't look cheaply put together. I do struggle with good design, I feel like I have a more methodical problem solver brain than an an aesthetics brain.&nbsp;</div><div><br /></div><div>Using Sharon Yi as a template for good design was really helpful as her portfolio was an excellent starting point, I really like the way she did everything minimal with a bit of personality thrown in for good measure.&nbsp;</div><div><br /></div><div>I'm starting my day off with a <a href=\"https://www.youtube.com/watch?v=B8Ig1-l3QuM\">dedeco mix</a>, it's a mix of techno inspired vgm mixes. He has such a good ear for mixing, it's very impressive what he can put together.</div><div><br /></div><h4 style=\"text-align: left;\"><span style=\"color: #3d85c6;\">Pomodoro Project</span></h4><div>First up I'm going to be adding sounds to my Pomodoro project from day 28. 'playsound' is a totally new python package to me and I'm going to put my professional coding hat on and try my best to learn from the documentation before I start perusing google for tutorials and stackoverflow fixes.</div><div><br /></div><div>I was trying to install the playsound package within the Pomodoro Project but for some reason I kept having an issue with PyCharm installing packages. It wouldn't download the package and then I was trying to install it via pip in the terminal, but then it doesn't recognise pip. Then I try to install with pip in PowerShell, doesn't recognise pip... cmd, doesn't recognise pip...</div><div><br /></div><div>I ended up going with the Pygame Music player as it seemed to install fairly easily. I'm not sure what was going on with simpleaudio or playsound, the two dedicated packages to just playing sounds, perhaps they are not updated to work with the current version of Python.</div><div><br /></div><h4 style=\"text-align: left;\"><span style=\"color: #3d85c6;\">Adding Pomodoro to Portfolio</span></h4><div>I'm not sure how exactly to add the Pomodoro to the project just yet, I'm hoping I could recreate the code as a class, that hopefully will open as a window to show off the functionality of the timer. Otherwise I could try to add a seperate page on the website that will run the timer.</div><div><br /></div><div>To save setting up the class the long way and individually adding self. to every variable, I've asked Co-Pilot to do it for me. Hopefully it still functions as intended...</div><div><br /></div><div>It worked as intended for the most part, apart from the fact it struggled to find the tomato.png from it's new home within the pomodoro_timer file.&nbsp; I found a solution on Stack Overflow where someone replaced the PhotoImage function with ImageTk.PhotoImage and Image from pillow. this also worked well for me as the Tkinter window opens just fine when calling it from the main.py.</div><div><br /></div><div>Original:</div><blockquote style=\"border: none; margin: 0px 0px 0px 40px; padding: 0px; text-align: left;\"><div><div style=\"background-color: #181717; color: #dedddc;\"><pre style=\"font-family: &quot;JetBrains Mono&quot;, monospace; font-size: 9.8pt;\">tomato_pic = PhotoImage(<span style=\"color: #916767;\">file</span>=<span style=\"color: #84a975;\">'tomato.png'</span>)</pre></div></div><div><div style=\"background-color: #181717; color: #dedddc;\"><pre style=\"font-family: &quot;JetBrains Mono&quot;, monospace; font-size: 9.8pt;\">canvas.create_image(<span style=\"color: #6b9a58;\">100</span>, <span style=\"color: #6b9a58;\">112</span>, <span style=\"color: #916767;\">image</span>=tomato_pic)</pre></div></div></blockquote><div>Working:</div><blockquote style=\"border: none; margin: 0px 0px 0px 40px; padding: 0px; text-align: left;\"><div><div style=\"background-color: #181717; color: #dedddc;\"><pre style=\"font-family: &quot;JetBrains Mono&quot;, monospace; font-size: 9.8pt;\"><span style=\"color: #a25b4e;\">path </span>= <span style=\"color: #84a975;\">'pomodoro_timer/tomato.png'</span></pre></div></div><div><div style=\"background-color: #181717; color: #dedddc;\"><pre style=\"font-family: &quot;JetBrains Mono&quot;, monospace; font-size: 9.8pt;\">self<span style=\"font-size: 9.8pt;\">.tomato_pic = ImageTk.PhotoImage(Image.open(</span><span style=\"color: #a25b4e; font-size: 9.8pt;\">path</span><span style=\"font-size: 9.8pt;\">))</span></pre></div></div><div><div style=\"background-color: #181717; color: #dedddc;\"><pre style=\"font-family: &quot;JetBrains Mono&quot;, monospace; font-size: 9.8pt;\"><div><pre style=\"font-family: &quot;JetBrains Mono&quot;, monospace; font-size: 9.8pt;\"><span style=\"color: #916767;\">self</span>.canvas.create_image(<span style=\"color: #6b9a58;\">100</span>, <span style=\"color: #6b9a58;\">112</span>, <span style=\"color: #916767;\">image</span>=<span style=\"color: #916767;\">self</span>.tomato_pic)</pre></div></pre></div></div></blockquote><p>&nbsp;I didn't manage to get the program functioning within the website tonight. But I did make some good headway on my projects page. Which currently consists of 4 cards, with AI generated images as backgrounds. One for the 'Discount Flight Finder', the 'Pomodoro Timer', the 'Movie Reviews Website' and the 'Morse Code Converter. This will be updated as I complete more portfolio projects to show off my skills.</p><p>It was fairly difficult getting this part of the website working well. I started by copy and pasting one of the feature examples which have images as backgrounds to cards. When I added the image to my cards through flask, of course the whole thing breaks / looks terrible. My images were not designed for the feature cards. It took me a while to work out how to position the images properly as I had to find the CSS styling for the background-image tag. Once I worked out how the styling worked it all fell together quite nicely, the images don't always match the cards perfectly as they move and stretch with the size of the window, but I was quite happy with the result.</p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhWKol-A-yc7R_5zkHaaEkauA8Yg5CeDiGs0rVONN6W_h2pj2UGY-Dn15Y8IpH-9ahSFqNStXDWu2qkhWT4ghNkf_wQoi6pul7WV2YGl0lUTkqNh7_Fx842-tl3qjaOYxF0GRaWj2zsFjWk5-F0MV5LrtcXCeDiH1LUXe6Lph3zrR78lr3GButftVHqesCr/s1961/Screenshot%202024-07-07%20180418.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1335\" data-original-width=\"1961\" height=\"218\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhWKol-A-yc7R_5zkHaaEkauA8Yg5CeDiGs0rVONN6W_h2pj2UGY-Dn15Y8IpH-9ahSFqNStXDWu2qkhWT4ghNkf_wQoi6pul7WV2YGl0lUTkqNh7_Fx842-tl3qjaOYxF0GRaWj2zsFjWk5-F0MV5LrtcXCeDiH1LUXe6Lph3zrR78lr3GButftVHqesCr/s320/Screenshot%202024-07-07%20180418.png\" width=\"320\" /></a></div><br /><p><br /></p><p>My next goal is to get the nav bar to track which page the user is currently on and have the project cards actually link to something. Either a page where the code is usable, or just the GitHub Links if that proves undoable.</p><div><br /></div>",
            "author": {
                "id": "06093669945308582562",
                "displayName": "Dooques",
                "url": "https://www.blogger.com/profile/06093669945308582562",
                "image": {
                    "url": "//www.blogger.com/img/blogger_logo_round_35.png"
                }
            },
            "replies": {
                "totalItems": "0",
                "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/7716155956636519548/comments"
            },
            "etag": "\"dGltZXN0YW1wOiAxNzIwNDY0Mzg3NTQ4Cm9mZnNldDogLTI1MjAwMDAwCg\""
        },
        {
            "kind": "blogger#post",
            "id": "7491313458734896148",
            "blog": {
                "id": "2697739541772529687"
            },
            "published": "2024-07-06T11:21:00-07:00",
            "updated": "2024-07-06T11:21:17-07:00",
            "url": "http://dooques.blogspot.com/2024/07/portfolio-project-part-1.html",
            "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/7491313458734896148",
            "title": "Portfolio Project Part 1",
            "content": "<h1 style=\"text-align: left;\"><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #7fb767; color: #6aa84f;\">Portfolio Project</span></h1><div><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #e8e6e3; color: black;\">Hi there, welcome back to my blog. Today I'm working on Day 82 of 100 Days of Code, this time I will be creating my professional portfolio website.</span></div><h4 style=\"text-align: left;\"><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #e8e6e3; color: black;\">Getting Started</span></h4><div><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #e8e6e3; color: black;\">I'm finding it quite difficult to get started with this one, there's going to be a lot of working parts and it's definitely going to take more than a few days to get this running properly. I've created a template using Canva for the Hero section of my website and have been going back through lessons and finding the packages / programs I've been using along the way to display as my current engineering skills.&nbsp;</span></div><div><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #e8e6e3; color: black;\"><br /></span></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgiZnrmxC7YEBNm8dM91a1KCHPSLEAx94uaXsu2c_XZLeuTtJd__oozW-YwHXs_Emi9oCSOyWUfKWrqOCHEWiSSQ4BpyFcx1U8sab8VZYhiCtClflMcjzbUxAJtpN8Tb8Bf9CRqXhIMV3gYAiH2VoT8bWFGHe8HleN3FyrqIcfRTUwEC0kezcWpPhOhzZU9/s1920/Samuel%20Dukes.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1080\" data-original-width=\"1920\" height=\"180\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgiZnrmxC7YEBNm8dM91a1KCHPSLEAx94uaXsu2c_XZLeuTtJd__oozW-YwHXs_Emi9oCSOyWUfKWrqOCHEWiSSQ4BpyFcx1U8sab8VZYhiCtClflMcjzbUxAJtpN8Tb8Bf9CRqXhIMV3gYAiH2VoT8bWFGHe8HleN3FyrqIcfRTUwEC0kezcWpPhOhzZU9/s320/Samuel%20Dukes.png\" width=\"320\" /></a></div><h4 style=\"text-align: left;\"><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #e8e6e3; color: black;\">GitHub Woes</span></h4><div><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #e8e6e3; color: black;\">I was going through some old projects from the course and trying to create GitHub repositories to be able to link them through my website. I did have some trouble working with Git this way and I'm not sure right now if it's because I'm trying to do them through PyCharm's GitHub functions or if I was creating the repositories in the wrong sequence. I'm going to go back through the old GitHub tutorial and see if I can get myself up to speed again.</span></div><div><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #e8e6e3; color: black;\"><br /></span></div><div><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #e8e6e3; color: black;\">After working through the project and getting everything in working order, I also made sure all sensitive information was stored within the venv and realised very late, that I had a json file containing emails that were impeding me from Pushing the commits to the GitHub repository.</span></div><div><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #e8e6e3; color: black;\"><br /></span></div><h4 style=\"text-align: left;\"><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #e8e6e3; color: black;\">Flight Search Project</span></h4><div><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #e8e6e3; color: black;\">Another Hurdle for this project was making sure my previous flight search project was working well. I updated some of the print statements to make them more obvious where things were happening. But in the end, I think the smtplib sever was just timing out, I added the port and timeout args to the stmplib function, which seemed to fix the issue well.</span></div><blockquote data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"--darkreader-inline-border-bottom: none; --darkreader-inline-border-left: none; --darkreader-inline-border-right: none; --darkreader-inline-border-top: none; border: none; margin: 0px 0px 0px 40px; padding: 0px;\"><div><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #e8e6e3; color: black;\"><div data-darkreader-inline-bgcolor=\"\" data-darkreader-inline-color=\"\" style=\"--darkreader-inline-bgcolor: #121314; --darkreader-inline-color: #d3cfc9; background-color: #181717; color: #dedddc;\"><pre style=\"font-family: &quot;JetBrains Mono&quot;, monospace; font-size: 9.8pt; text-align: left;\">smtplib.SMTP(<span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #a1998d; color: #84a975;\">'smtp.gmail.com'</span>, <span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #84af73; color: #6b9a58;\">587</span>, <span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #9a9184; color: #916767;\">timeout</span>=<span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #84af73; color: #6b9a58;\">120</span>)</pre></div></span></div></blockquote><h4 style=\"text-align: left;\">Portfolio Website&nbsp;</h4><p>I made a good start to the website today, it definitely took a lot of work to come up with the minimal design I have currently. The template I made earlier definitely helped me focus more when trying to come up with the design. I found this website by <a href=\"https://sharon-yi.com/\">Sharon Yi</a>&nbsp;which is a beautifully minimal design and was defintely a good inspiration for what I was trying to do. Here's my current design:</p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhfv2zymoRZmOtOZF4xB1HPNa7PhuDEvnqjyhHIDfwiB2-bB3Evj6E3KBnTaYWR3OOwValu3gPuZnG2VDkI-Vfnmhx7ntnyEkLwZzPt7iccH25iaoi0SrGFsc4om0t5TSz61HldthLj4rjN0I4m7paB8YBcAwmIIyj7WIArN_9oUNmMBCSpOe5OZNdODuvw/s1191/Screenshot%202024-07-06%20181739.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1181\" data-original-width=\"1191\" height=\"317\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhfv2zymoRZmOtOZF4xB1HPNa7PhuDEvnqjyhHIDfwiB2-bB3Evj6E3KBnTaYWR3OOwValu3gPuZnG2VDkI-Vfnmhx7ntnyEkLwZzPt7iccH25iaoi0SrGFsc4om0t5TSz61HldthLj4rjN0I4m7paB8YBcAwmIIyj7WIArN_9oUNmMBCSpOe5OZNdODuvw/s320/Screenshot%202024-07-06%20181739.png\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div><div class=\"separator\" style=\"clear: both; text-align: left;\">Next up I'll hopefully be able to add my portfolio projects in a workable state and publish the website for public consumption.</div><h4 style=\"text-align: left;\"><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #e8e6e3; color: black;\">Music</span></h4><div><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #e8e6e3; color: black;\">I'm listening to a playlist of MegaTen soundtracks, I've played a few Persona Games and want to get more into Atlus games in general but sometimes the games are so long I get JRPG fatigue very quickly. I also listened to a couple of youtube vgm mixes as usual. The last link is to a guy named dedeco, a brazillian DJ who does live mixes of old vgm soundtracks and everything he does sounds brilliant.&nbsp;</span></div><div><span data-darkreader-inline-color=\"\" style=\"--darkreader-inline-color: #e8e6e3; color: black;\"><br /></span></div><div><span><a href=\"https://open.spotify.com/playlist/1ChMgOhdH9ph3l5CequleU?si=fee5a8ec42544cce\">https://open.spotify.com/playlist/1ChMgOhdH9ph3l5CequleU?si=fee5a8ec42544cce</a></span></div><div><a href=\"https://www.youtube.com/watch?v=Fp07SxPU6q8\">https://www.youtube.com/watch?v=Fp07SxPU6q8</a><br /></div><div><a href=\"https://www.youtube.com/watch?v=pZ3rjoZmTJ8\">https://www.youtube.com/watch?v=pZ3rjoZmTJ8</a><br /></div>",
            "author": {
                "id": "06093669945308582562",
                "displayName": "Dooques",
                "url": "https://www.blogger.com/profile/06093669945308582562",
                "image": {
                    "url": "//www.blogger.com/img/blogger_logo_round_35.png"
                }
            },
            "replies": {
                "totalItems": "0",
                "selfLink": "https://www.googleapis.com/blogger/v3/blogs/2697739541772529687/posts/7491313458734896148/comments"
            },
            "etag": "\"dGltZXN0YW1wOiAxNzIwMjkwMDc3NjkxCm9mZnNldDogLTI1MjAwMDAwCg\""
        }
    ],
    "etag": "\"MjAyNC0wOC0xOVQwNjo0ODo1NS4xMzRa\""
}